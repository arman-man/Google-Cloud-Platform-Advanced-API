{
	"info": {
		"_postman_id": "7ba7919f-fd84-4ef4-8aef-c288f54c2a2e",
		"name": "cs493_final_project",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "30134288"
	},
	"item": [
		{
			"name": "Login - jwt1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let id_token = pm.response.json().id_token;\r",
							"pm.environment.set(\"jwt1\", id_token);\r",
							"\r",
							"pm.test(\"200 status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\"username\":\"sponge@bob.com\",\r\n\"password\":\"patrick123!\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/login",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login - jwt2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let id_token = pm.response.json().id_token;\r",
							"pm.environment.set(\"jwt2\", id_token);\r",
							"\r",
							"pm.test(\"200 status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\"username\":\"patrick@star.com\",\r\n\"password\":\"spongebob333!\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/login",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create boat1 - jwt1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let boat_id = pm.response.json().id;\r",
							"pm.environment.set(\"boat1\", boat_id);\r",
							"\r",
							"pm.test(\"201 status code\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"content is valid\", function () {\r",
							"   pm.expect(pm.response.json()[\"name\"]).to.eq(\"dutchman\");\r",
							"   pm.expect(pm.response.json()[\"type\"]).to.eq(\"ghostly ship\");\r",
							"   pm.expect(pm.response.json()[\"length\"]).to.eq(100);\r",
							"   pm.expect(pm.response.json()[\"loads\"]).to.deep.equal([]);\r",
							"   \r",
							"   const self_url = pm.environment.get(\"app_url\") + \"/boats/\" + pm.response.json()[\"id\"];\r",
							"   pm.expect(pm.response.json()[\"self\"]).to.eq(self_url);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\"name\":\"dutchman\",\r\n\"type\":\"ghostly ship\",\r\n\"length\": 100\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/boats",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create boat2 - jwt1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let boat_id = pm.response.json().id;\r",
							"pm.environment.set(\"boat2\", boat_id);\r",
							"\r",
							"pm.test(\"201 status code\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"content is valid\", function () {\r",
							"   pm.expect(pm.response.json()[\"name\"]).to.eq(\"krusty krab\");\r",
							"   pm.expect(pm.response.json()[\"type\"]).to.eq(\"krabby patty\");\r",
							"   pm.expect(pm.response.json()[\"length\"]).to.eq(25);\r",
							"   pm.expect(pm.response.json()[\"loads\"]).to.deep.equal([]);\r",
							"   \r",
							"   const self_url = pm.environment.get(\"app_url\") + \"/boats/\" + pm.response.json()[\"id\"];\r",
							"   pm.expect(pm.response.json()[\"self\"]).to.eq(self_url);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\"name\":\"krusty krab\",\r\n\"type\":\"krabby patty\",\r\n\"length\": 25\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/boats",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get boat1 - jwt1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"content is valid\", function () {\r",
							"   pm.expect(pm.response.json()[\"name\"]).to.eq(\"dutchman\");\r",
							"   pm.expect(pm.response.json()[\"type\"]).to.eq(\"ghostly ship\");\r",
							"   pm.expect(pm.response.json()[\"length\"]).to.eq(100);\r",
							"   pm.expect(pm.response.json()[\"loads\"]).to.deep.equal([]);\r",
							"   \r",
							"   const self_url = pm.environment.get(\"app_url\") + \"/boats/\" + pm.response.json()[\"id\"];\r",
							"   pm.expect(pm.response.json()[\"self\"]).to.eq(self_url);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/boats/{{boat1}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats",
						"{{boat1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all boats - jwt1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/boats",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update boat1 - jwt1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"303 status code\", function () {\r",
							"    pm.response.to.have.status(303);\r",
							"});\r",
							"\r",
							"pm.test(\"content is valid\", function () {\r",
							"   pm.expect(pm.response.json()[\"name\"]).to.eq(\"sandy cheeks\");\r",
							"   pm.expect(pm.response.json()[\"type\"]).to.eq(\"squirrel\");\r",
							"   pm.expect(pm.response.json()[\"length\"]).to.eq(2500);\r",
							"   pm.expect(pm.response.json()[\"loads\"]).to.deep.equal([]);\r",
							"   \r",
							"   const self_url = pm.environment.get(\"app_url\") + \"/boats/\" + pm.response.json()[\"id\"];\r",
							"   pm.expect(pm.response.json()[\"self\"]).to.eq(self_url);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\"name\":\"sandy cheeks\",\r\n\"type\":\"squirrel\",\r\n\"length\": 2500\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/boats/{{boat1}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats",
						"{{boat1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Partial update boat1 - jwt1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"content is valid\", function () {\r",
							"   pm.expect(pm.response.json()[\"name\"]).to.eq(\"plankton\");\r",
							"   pm.expect(pm.response.json()[\"type\"]).to.eq(\"evil\");\r",
							"   pm.expect(pm.response.json()[\"length\"]).to.eq(2500);\r",
							"   pm.expect(pm.response.json()[\"loads\"]).to.deep.equal([]);\r",
							"   \r",
							"   const self_url = pm.environment.get(\"app_url\") + \"/boats/\" + pm.response.json()[\"id\"];\r",
							"   pm.expect(pm.response.json()[\"self\"]).to.eq(self_url);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\"name\":\"plankton\",\r\n\"type\":\"evil\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/boats/{{boat1}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats",
						"{{boat1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create load1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let load_id = pm.response.json().id;\r",
							"pm.environment.set(\"load1\", load_id);\r",
							"\r",
							"pm.test(\"201 status code\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"content is valid\", function () {\r",
							"   pm.expect(pm.response.json()[\"volume\"]).to.eq(100);\r",
							"   pm.expect(pm.response.json()[\"item\"]).to.eq(\"Patties\");\r",
							"   pm.expect(pm.response.json()[\"creation_date\"]).to.eq(\"12/05/2023\");\r",
							"   pm.expect(pm.response.json()[\"carrier\"]).to.eq(null);\r",
							"   \r",
							"   const self_url = pm.environment.get(\"app_url\") + \"/loads/\" + pm.response.json()[\"id\"];\r",
							"   pm.expect(pm.response.json()[\"self\"]).to.eq(self_url);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"volume\": 100,\r\n  \"item\": \"Patties\",\r\n  \"creation_date\": \"12/05/2023\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/loads",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"loads"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create load2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let load_id = pm.response.json().id;\r",
							"pm.environment.set(\"load2\", load_id);\r",
							"\r",
							"pm.test(\"201 status code\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"content is valid\", function () {\r",
							"   pm.expect(pm.response.json()[\"volume\"]).to.eq(20);\r",
							"   pm.expect(pm.response.json()[\"item\"]).to.eq(\"Buns\");\r",
							"   pm.expect(pm.response.json()[\"creation_date\"]).to.eq(\"12/03/2023\");\r",
							"   pm.expect(pm.response.json()[\"carrier\"]).to.eq(null);\r",
							"   \r",
							"   const self_url = pm.environment.get(\"app_url\") + \"/loads/\" + pm.response.json()[\"id\"];\r",
							"   pm.expect(pm.response.json()[\"self\"]).to.eq(self_url);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"volume\": 20,\r\n  \"item\": \"Buns\",\r\n  \"creation_date\": \"12/03/2023\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/loads",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"loads"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get load1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"content is valid\", function () {\r",
							"   pm.expect(pm.response.json()[\"volume\"]).to.eq(100);\r",
							"   pm.expect(pm.response.json()[\"item\"]).to.eq(\"Patties\");\r",
							"   pm.expect(pm.response.json()[\"creation_date\"]).to.eq(\"12/05/2023\");\r",
							"   pm.expect(pm.response.json()[\"carrier\"]).to.eq(null);\r",
							"\r",
							"   const self_url = pm.environment.get(\"app_url\") + \"/loads/\" + pm.response.json()[\"id\"];\r",
							"   pm.expect(pm.response.json()[\"self\"]).to.eq(self_url);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/loads/{{load1}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"loads",
						"{{load1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all loads",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/loads",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"loads"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update load1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"303 status code\", function () {\r",
							"    pm.response.to.have.status(303);\r",
							"});\r",
							"\r",
							"pm.test(\"content is valid\", function () {\r",
							"   pm.expect(pm.response.json()[\"volume\"]).to.eq(1000);\r",
							"   pm.expect(pm.response.json()[\"item\"]).to.eq(\"Pickles\");\r",
							"   pm.expect(pm.response.json()[\"creation_date\"]).to.eq(\"12/06/2023\");\r",
							"   pm.expect(pm.response.json()[\"carrier\"]).to.eq(null);\r",
							"   \r",
							"   const self_url = pm.environment.get(\"app_url\") + \"/loads/\" + pm.response.json()[\"id\"];\r",
							"   pm.expect(pm.response.json()[\"self\"]).to.eq(self_url);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"volume\": 1000,\r\n  \"item\": \"Pickles\",\r\n  \"creation_date\": \"12/06/2023\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/loads/{{load1}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"loads",
						"{{load1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Partial update load1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"content is valid\", function () {\r",
							"   pm.expect(pm.response.json()[\"volume\"]).to.eq(5000);\r",
							"   pm.expect(pm.response.json()[\"item\"]).to.eq(\"Pickles\");\r",
							"   pm.expect(pm.response.json()[\"creation_date\"]).to.eq(\"12/06/2023\");\r",
							"   pm.expect(pm.response.json()[\"carrier\"]).to.eq(null);\r",
							"\r",
							"   const self_url = pm.environment.get(\"app_url\") + \"/loads/\" + pm.response.json()[\"id\"];\r",
							"   pm.expect(pm.response.json()[\"self\"]).to.eq(self_url);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"volume\": 5000\r\n  }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/loads/{{load1}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"loads",
						"{{load1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Assign load1 to boat1 - jwt1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"204 status code\", function () {",
							"    pm.response.to.have.status(204);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{app_url}}/boats/{{boat1}}/loads/{{load1}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats",
						"{{boat1}}",
						"loads",
						"{{load1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Assign load2 to boat1 - jwt1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"204 status code\", function () {",
							"    pm.response.to.have.status(204);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{app_url}}/boats/{{boat1}}/loads/{{load2}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats",
						"{{boat1}}",
						"loads",
						"{{load2}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all loads for boat1 - jwt1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/boats/{{boat1}}/loads",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats",
						"{{boat1}}",
						"loads"
					]
				}
			},
			"response": []
		},
		{
			"name": "Remove load1 from boat1 - jwt1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"204 status code\", function () {",
							"    pm.response.to.have.status(204);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{app_url}}/boats/{{boat1}}/loads/{{load1}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats",
						"{{boat1}}",
						"loads",
						"{{load1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Remove load2 from boat1 - jwt1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"204 status code\", function () {",
							"    pm.response.to.have.status(204);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{app_url}}/boats/{{boat1}}/loads/{{load2}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats",
						"{{boat1}}",
						"loads",
						"{{load2}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete load1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"204 status code\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/loads/{{load1}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"loads",
						"{{load1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete load2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"204 status code\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/loads/{{load2}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"loads",
						"{{load2}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete boat1 - jwt1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"204 status code\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/boats/{{boat1}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats",
						"{{boat1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete boat2 - jwt1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"204 status code\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/boats/{{boat2}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats",
						"{{boat2}}"
					]
				}
			},
			"response": []
		}
	]
}